{"dependencies":[{"name":"E:\\dev\\Snake\\tsconfig.json","includedInParent":true,"mtime":1518205817291},{"name":"./core","loc":{"line":4,"column":19}},{"name":"./vec2","loc":{"line":5,"column":19}}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"./core\");\r\nvar Core = require(\"./core\");\r\nvar vec2 = require(\"./vec2\");\r\n// CONFIG //\r\nvar MS_PER_TICK = 100;\r\nvar GRID_WIDTH = 20;\r\nvar GRID_HEIGHT = 20;\r\nvar SNAKE_INIT_LENGTH = 4;\r\nvar SNAKE_INIT_DIR = core_1.Dir.Right;\r\nvar SNAKE_INIT_X = 1;\r\nvar SNAKE_INIT_Y = 1;\r\n////////////\r\nfunction start(canvas) {\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var game = init();\r\n    window.addEventListener(\"keydown\", function (ev) { return handleInput(game, ev.keyCode); });\r\n    renderLoop(ctx, game);\r\n    updateLoop(ctx, game);\r\n}\r\nexports.start = start;\r\nfunction init() {\r\n    return {\r\n        game: Core.init({\r\n            gridSize: [GRID_WIDTH, GRID_HEIGHT],\r\n            dir: SNAKE_INIT_DIR,\r\n            snakeLength: SNAKE_INIT_LENGTH,\r\n            position: [SNAKE_INIT_X, SNAKE_INIT_Y],\r\n        }),\r\n        needsRender: true,\r\n    };\r\n}\r\nfunction reinit(gameWrapper) {\r\n    Core.reinit(gameWrapper.game);\r\n    gameWrapper.needsRender = true;\r\n}\r\nfunction renderLoop(ctx, wrapper) {\r\n    var game = wrapper.game;\r\n    var time = performance.now();\r\n    if (wrapper.needsRender) {\r\n        if (game.state === core_1.GameState.InProgress) {\r\n            render(ctx, game, time);\r\n        }\r\n        wrapper.needsRender = false;\r\n    }\r\n    renderNoms(ctx, game, time);\r\n    switch (game.state) {\r\n        case core_1.GameState.InProgress:\r\n            break;\r\n        case core_1.GameState.InProgressAndPaused:\r\n            renderGamePaused(ctx, game);\r\n            break;\r\n        case core_1.GameState.Lost:\r\n            renderGameLost(ctx, game);\r\n            break;\r\n        case core_1.GameState.Won:\r\n            renderGameWon(ctx, game);\r\n            break;\r\n    }\r\n    requestAnimationFrame(function () { return renderLoop(ctx, wrapper); });\r\n}\r\nfunction render(ctx, game, time) {\r\n    var _a = getDotSize(ctx.canvas, game), dotWidth = _a[0], dotHeight = _a[1];\r\n    ctx.fillStyle = \"rgb(0, 0, 0)\";\r\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    var _b = game.gridSize, width = _b[0], height = _b[1];\r\n    for (var x = 0; x < width; x++) {\r\n        for (var y = 0; y < height; y++) {\r\n            if (game.grid[x][y] == game.snake.length) {\r\n                // Head\r\n                ctx.fillStyle = \"rgb(255, 255, 255)\";\r\n            }\r\n            else if (game.grid[x][y] > 0) {\r\n                // Tail\r\n                var pct = game.grid[x][y] / game.snake.length;\r\n                ctx.fillStyle = lerpSnakeStyle(pct);\r\n            }\r\n            else {\r\n                // Empty block\r\n                continue;\r\n            }\r\n            ctx.fillRect(x * dotWidth, y * dotHeight, dotWidth, dotHeight);\r\n        }\r\n    }\r\n}\r\nfunction getDotSize(canvas, game) {\r\n    return vec2.divide([canvas.width, canvas.height], game.gridSize);\r\n}\r\nfunction lerp(pct, from, to) {\r\n    return from + Math.floor(pct * (to - from));\r\n}\r\nfunction lerpSnakeStyle(pct) {\r\n    return \"rgb(\" + lerp(pct, 150, 200) + \",\" + lerp(pct, 150, 255) + \",\" + lerp(pct, 140, 100) + \")\";\r\n}\r\nfunction renderNoms(ctx, game, time) {\r\n    var _a = game.noms, x = _a[0], y = _a[1];\r\n    var _b = getDotSize(ctx.canvas, game), dotWidth = _b[0], dotHeight = _b[1];\r\n    ctx.fillStyle = nomStyle(time);\r\n    ctx.fillRect(x * dotWidth, y * dotHeight, dotWidth, dotHeight);\r\n}\r\nfunction pctToByte(pct) {\r\n    return Math.floor(pct * 255.999999);\r\n}\r\nfunction nomStyle(time) {\r\n    var b = (time % 100) / 100;\r\n    var g = (time % 200) / 200;\r\n    return \"rgb(255,\" + pctToByte(g) + \",\" + pctToByte(b) + \")\";\r\n}\r\nfunction renderGamePaused(ctx, game) {\r\n    ctx.fillStyle = \"rgb(240, 20, 20)\";\r\n    ctx.font = \"40px Roboto\";\r\n    ctx.fillText(\"Paused\", 300, 200);\r\n}\r\nfunction renderGameLost(ctx, game) {\r\n    ctx.fillStyle = \"rgb(255, 0, 0)\";\r\n    ctx.font = \"40px Roboto\";\r\n    ctx.fillText(\"You died\", 300, 200);\r\n    ctx.font = \"34px Roboto\";\r\n    ctx.fillText(\"Score: \" + Core.getScore(game), 320, 400);\r\n}\r\nfunction renderGameWon(ctx, game) {\r\n    ctx.fillStyle = \"rgb(255, 0, 0)\";\r\n    ctx.font = \"40px Roboto\";\r\n    ctx.fillText(\"Wtf.\", 300, 200);\r\n    ctx.font = \"34px Roboto\";\r\n    ctx.fillText(\"You won?\", 320, 400);\r\n}\r\nfunction updateLoop(ctx, wrapper) {\r\n    setInterval(function () {\r\n        var game = wrapper.game;\r\n        switch (game.state) {\r\n            case core_1.GameState.InProgress:\r\n                Core.update(game);\r\n                wrapper.needsRender = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, MS_PER_TICK);\r\n}\r\nfunction handleInput(wrapper, keyCode) {\r\n    switch (wrapper.game.state) {\r\n        case core_1.GameState.InProgress:\r\n            handleGameInput(wrapper, keyCode);\r\n            break;\r\n        case core_1.GameState.InProgressAndPaused:\r\n            handlePausedInput(wrapper, keyCode);\r\n            break;\r\n        case core_1.GameState.Lost:\r\n        case core_1.GameState.Won:\r\n            handleGameEndedInput(wrapper, keyCode);\r\n            break;\r\n    }\r\n}\r\nfunction handleGameEndedInput(wrapper, keyCode) {\r\n    switch (keyCode) {\r\n        case 13: // Enter\r\n        case 27: // Esc\r\n        case 32:// Space\r\n            reinit(wrapper);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\nfunction handleGameInput(wrapper, keyCode) {\r\n    var game = wrapper.game;\r\n    switch (keyCode) {\r\n        case 13: // Enter\r\n        case 27: // Esc\r\n        case 32:// Space\r\n            game.state = core_1.GameState.InProgressAndPaused;\r\n            wrapper.needsRender = true;\r\n            break;\r\n        case 65:\r\n        case 37:\r\n            Core.setDirection(game, core_1.Dir.Left);\r\n            break;\r\n        case 87:\r\n        case 38:\r\n            Core.setDirection(game, core_1.Dir.Up);\r\n            break;\r\n        case 68:\r\n        case 39:\r\n            Core.setDirection(game, core_1.Dir.Right);\r\n            break;\r\n        case 83:\r\n        case 40:\r\n            Core.setDirection(game, core_1.Dir.Down);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\nfunction handlePausedInput(_a, keyCode) {\r\n    var game = _a.game;\r\n    console.log(\"unpausing\", keyCode);\r\n    switch (keyCode) {\r\n        case 13: // Enter\r\n        case 27: // Esc\r\n        case 32:// Space\r\n            game.state = core_1.GameState.InProgress;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n","map":{"version":3,"file":"game.js","sourceRoot":"","sources":["src\\snake\\game.ts"],"names":[],"mappings":"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","sourcesContent":["import { Game, GameState, Dir } from \"./core\"\r\nimport { Vec2 } from \"./vec2\"\r\nimport * as Core from \"./core\"\r\nimport * as vec2 from \"./vec2\"\r\n\r\n\r\n// CONFIG //\r\nconst MS_PER_TICK = 100\r\n\r\nconst GRID_WIDTH = 20\r\nconst GRID_HEIGHT = 20\r\n\r\nconst SNAKE_INIT_LENGTH = 4\r\nconst SNAKE_INIT_DIR = Dir.Right\r\nconst SNAKE_INIT_X = 1\r\nconst SNAKE_INIT_Y = 1\r\n////////////\r\n\r\n\r\nexport function start(canvas: HTMLCanvasElement): void {\r\n    const ctx = canvas.getContext(\"2d\")!\r\n    const game = init()\r\n    \r\n    window.addEventListener(\"keydown\", ev => handleInput(game, ev.keyCode))\r\n\r\n    renderLoop(ctx, game)\r\n    updateLoop(ctx, game)\r\n}\r\n\r\ninterface GameWrapper {\r\n    readonly game: Game\r\n    needsRender: boolean\r\n}\r\n\r\nfunction init(): GameWrapper {\r\n    return {\r\n        game: Core.init({\r\n            gridSize: [GRID_WIDTH, GRID_HEIGHT],\r\n            dir: SNAKE_INIT_DIR,\r\n            snakeLength: SNAKE_INIT_LENGTH,\r\n            position: [SNAKE_INIT_X, SNAKE_INIT_Y],\r\n        }),\r\n        needsRender: true,\r\n    }\r\n}\r\n \r\nfunction reinit(gameWrapper: GameWrapper): void {\r\n    Core.reinit(gameWrapper.game)\r\n    gameWrapper.needsRender = true\r\n}\r\n\r\nfunction renderLoop(ctx: CanvasRenderingContext2D, wrapper: GameWrapper): void {\r\n    const game = wrapper.game\r\n    const time = performance.now()\r\n    if (wrapper.needsRender) {\r\n        if (game.state === GameState.InProgress) {\r\n            render(ctx, game, time)\r\n        }\r\n        wrapper.needsRender = false\r\n    } \r\n    renderNoms(ctx, game, time)\r\n    switch (game.state) {\r\n        case GameState.InProgress:\r\n            break\r\n        case GameState.InProgressAndPaused:\r\n            renderGamePaused(ctx, game)\r\n            break\r\n        case GameState.Lost:\r\n            renderGameLost(ctx, game)\r\n            break\r\n        case GameState.Won:\r\n            renderGameWon(ctx, game)\r\n            break\r\n    }\r\n    requestAnimationFrame(() => renderLoop(ctx, wrapper))\r\n}\r\n\r\nfunction render(ctx: CanvasRenderingContext2D, game: Game, time: number): void {\r\n    const [dotWidth, dotHeight] = getDotSize(ctx.canvas, game)\r\n\r\n    ctx.fillStyle = \"rgb(0, 0, 0)\"\r\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n\r\n    const [width, height] = game.gridSize\r\n    for (let x = 0; x < width; x++) {\r\n        for (let y = 0; y < height; y++) {\r\n            if (game.grid[x][y] == game.snake.length) {\r\n                // Head\r\n                ctx.fillStyle = \"rgb(255, 255, 255)\"\r\n            } else if (game.grid[x][y] > 0) {\r\n                // Tail\r\n                const pct = game.grid[x][y] / game.snake.length\r\n                ctx.fillStyle = lerpSnakeStyle(pct)\r\n            } else {\r\n                // Empty block\r\n                continue\r\n            }\r\n            ctx.fillRect(x * dotWidth, y * dotHeight, dotWidth, dotHeight)\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDotSize(canvas: HTMLCanvasElement, game: Game): [number, number] {\r\n    return vec2.divide([canvas.width, canvas.height], game.gridSize)\r\n}\r\n\r\nfunction lerp(pct: number, from: number, to: number): number {\r\n    return from + Math.floor(pct * (to - from))\r\n}\r\n\r\nfunction lerpSnakeStyle(pct: number): string {\r\n    return \"rgb(\" + lerp(pct, 150, 200) + \",\" + lerp(pct, 150, 255) + \",\" + lerp(pct, 140, 100) + \")\"\r\n}\r\n\r\nfunction renderNoms(ctx: CanvasRenderingContext2D, game: Game, time: number): void {\r\n    const [x, y] = game.noms\r\n    const [dotWidth, dotHeight] = getDotSize(ctx.canvas, game)\r\n    ctx.fillStyle = nomStyle(time)\r\n    ctx.fillRect(x * dotWidth, y * dotHeight, dotWidth, dotHeight)\r\n}\r\n\r\nfunction pctToByte(pct: number): number {\r\n    return Math.floor(pct * 255.999999)\r\n}\r\n\r\nfunction nomStyle(time: number): string {\r\n    const b = (time % 100) / 100\r\n    const g = (time % 200) / 200\r\n    return \"rgb(255,\" + pctToByte(g) + \",\" + pctToByte(b) + \")\"\r\n}\r\n\r\nfunction renderGamePaused(ctx: CanvasRenderingContext2D, game: Game): void {\r\n    ctx.fillStyle = \"rgb(240, 20, 20)\"\r\n    ctx.font = \"40px Roboto\"\r\n    ctx.fillText(\"Paused\", 300, 200)\r\n}\r\n\r\nfunction renderGameLost(ctx: CanvasRenderingContext2D, game: Game): void {\r\n    ctx.fillStyle = \"rgb(255, 0, 0)\"\r\n    ctx.font = \"40px Roboto\"\r\n    ctx.fillText(\"You died\", 300, 200)\r\n    ctx.font = \"34px Roboto\"\r\n    ctx.fillText(\"Score: \" + Core.getScore(game), 320, 400)\r\n}\r\n\r\nfunction renderGameWon(ctx: CanvasRenderingContext2D, game: Game): void {\r\n    ctx.fillStyle = \"rgb(255, 0, 0)\"\r\n    ctx.font = \"40px Roboto\"\r\n    ctx.fillText(\"Wtf.\", 300, 200)\r\n    ctx.font = \"34px Roboto\"\r\n    ctx.fillText(\"You won?\", 320, 400)\r\n}\r\n\r\nfunction updateLoop(ctx: CanvasRenderingContext2D, wrapper: GameWrapper): void {\r\n    setInterval(() => {\r\n        const game = wrapper.game\r\n        switch (game.state) {\r\n            case GameState.InProgress:\r\n                Core.update(game)\r\n                wrapper.needsRender = true\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }, MS_PER_TICK)\r\n}\r\n\r\nfunction handleInput(wrapper: GameWrapper, keyCode: number): void {\r\n\r\n    switch (wrapper.game.state) {\r\n        case GameState.InProgress:\r\n            handleGameInput(wrapper, keyCode)\r\n            break\r\n        case GameState.InProgressAndPaused:\r\n            handlePausedInput(wrapper, keyCode)\r\n            break\r\n        case GameState.Lost:\r\n        case GameState.Won:\r\n            handleGameEndedInput(wrapper, keyCode)\r\n            break\r\n    }\r\n}\r\n\r\nfunction handleGameEndedInput(wrapper: GameWrapper, keyCode: number): void {\r\n    switch (keyCode) {\r\n        case 13: // Enter\r\n        case 27:// Esc\r\n        case 32:// Space\r\n            reinit(wrapper)\r\n            break\r\n        default:\r\n            break\r\n    }\r\n}\r\n\r\nfunction handleGameInput(wrapper: GameWrapper, keyCode: number): void {\r\n    const game = wrapper.game\r\n    switch(keyCode) {\r\n        case 13: // Enter\r\n        case 27:// Esc\r\n        case 32:// Space\r\n            game.state = GameState.InProgressAndPaused\r\n            wrapper.needsRender = true\r\n            break\r\n        case 65:\r\n        case 37:\r\n            Core.setDirection(game, Dir.Left)\r\n            break\r\n        case 87:\r\n        case 38:\r\n            Core.setDirection(game, Dir.Up)\r\n            break\r\n        case 68:\r\n        case 39:\r\n            Core.setDirection(game, Dir.Right)\r\n            break\r\n        case 83:\r\n        case 40:\r\n            Core.setDirection(game, Dir.Down)\r\n            break\r\n        default:\r\n            break\r\n    }\r\n}\r\n\r\nfunction handlePausedInput({ game }: GameWrapper, keyCode: number): void {\r\n    console.log(\"unpausing\", keyCode)\r\n    switch (keyCode) {\r\n        case 13: // Enter\r\n        case 27:// Esc\r\n        case 32:// Space\r\n            game.state = GameState.InProgress\r\n            break\r\n        default:\r\n            break\r\n    }\r\n}\r\n\r\n"]}},"hash":"80f031ea8177d959df395396d0a8b55f","cacheData":{"env":{}}}