{"version":3,"sources":["webpack:///./src/ui/theme.scss","webpack:///index.scss","webpack:///./src/ui/index.scss","webpack:///brush.scss","webpack:///./src/ui/brush.scss","webpack:///buttons.scss","webpack:///./src/ui/views/buttons.scss","webpack:///./src/ui/views/colorDisplay.scss","webpack:///./src/ui/views/colorWheel.scss","webpack:///icons.scss","webpack:///./src/ui/views/icons.scss","webpack:///./src/ui/views/inlineLabeled.scss","webpack:///./src/ui/views/labeled.scss","webpack:///menu.scss","webpack:///./src/ui/views/menu.scss","webpack:///./src/ui/views/row.scss","webpack:///slider.scss","webpack:///./src/ui/views/slider.scss","webpack:///surface.scss","webpack:///./src/ui/views/surface.scss","webpack:///switch.scss","webpack:///./src/ui/views/switch.scss","webpack:///eraser.scss","webpack:///./src/ui/eraser.scss","webpack:///./src/ui/toolbar.scss","webpack:///layers.scss","webpack:///./src/ui/layers.scss","webpack:///debugging.scss","webpack:///./src/ui/debugging.scss","webpack:///./src/ui/miniMap.scss"],"names":[],"mappings":"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","file":"main-8767ece46c479374e2a5.css","sourcesContent":["/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\r\n$color-background: var(--color-background);\r\n$color-primary: var(--color-primary);\r\n$color-primaryLight: var(--color-primaryLight);\r\n$color-primaryDark: var(--color-primaryDark);\r\n$color-secondary: var(--color-secondary);\r\n$color-secondaryLight: var(--color-secondaryLight);\r\n$color-secondaryDark: var(--color-secondaryDark);\r\n$color-surface: var(--color-surface);\r\n$color-onPrimary: var(--color-onPrimary);\r\n$color-onSecondary: var(--color-onSecondary);\r\n$color-onSurface: var(--color-onSurface);\r\n\r\n$shadows-button: var(--shadows-button);\r\n$shadows-surface: var(--shadows-surface);\r\n$shadows-menu: var(--shadows-menu);\r\n\r\n$fonts-normal: var(--fonts-normal);\r\n$fonts-monospace: var(--fonts-monospace);\r\n","/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\n.wrapper {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  box-sizing: border-box !important; }\n  .wrapper ** {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: none;\n    box-sizing: inherit; }\n\n.bottomLeft {\n  position: absolute;\n  left: 0.5rem;\n  bottom: 0.5rem; }\n\n.bottomRight {\n  position: absolute;\n  right: 0.5rem;\n  bottom: 0.5rem; }\n\n.appContainer {\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  font-family: var(--fonts-normal); }\n\n.layersViewContainer {\n  width: 14rem;\n  z-index: 1; }\n  .layersViewContainer > :not(:first-child)::before {\n    display: block;\n    height: 1rem;\n    content: \" \"; }\n\n.canvas {\n  cursor: crosshair;\n  z-index: 0; }\n","@import \"./theme.scss\";\r\n\r\n.wrapper {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    box-sizing: border-box !important;\r\n\r\n    ** {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: 0;\r\n        outline: none;\r\n        box-sizing: inherit;\r\n    }\r\n}\r\n\r\n.bottomLeft {\r\n    position: absolute;\r\n    left: 0.5rem;\r\n    bottom: 0.5rem;\r\n}\r\n\r\n.bottomRight {\r\n    position: absolute;\r\n    right: 0.5rem;\r\n    bottom: 0.5rem;\r\n}\r\n\r\n.appContainer {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n    font-family: $fonts-normal;\r\n}\r\n\r\n.layersViewContainer {\r\n    width: 14rem;\r\n    z-index: 1;\r\n\r\n    > :not(:first-child)::before {\r\n        display: block;\r\n        height: 1rem;\r\n        content: \" \";\r\n    }\r\n}\r\n\r\n.canvas {\r\n    cursor: crosshair;\r\n    z-index: 0;\r\n}\r\n","/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\n.textInput {\n  background-color: var(--color-surface);\n  color: var(--color-onSurface);\n  padding: 0.25rem 0;\n  border-radius: 0.25rem;\n  font-family: var(--fonts-monospace); }\n  .textInput:focus {\n    background-color: var(--color-secondary);\n    color: var(--color-onSecondary);\n    padding: 0.25rem 0.5rem; }\n\n.detailsContainer {\n  background-color: var(--color-surface);\n  color: var(--color-onSurface);\n  display: flex;\n  flex-direction: column;\n  width: 12rem;\n  padding: 0.5rem 0.75rem;\n  height: 100%; }\n","@import \"./theme.scss\";\r\n\r\n.textInput {\r\n    background-color: $color-surface;\r\n    color: $color-onSurface;\r\n    padding: 0.25rem 0;\r\n    border-radius: 0.25rem;\r\n    font-family: $fonts-monospace;\r\n\r\n    &:focus {\r\n        background-color: $color-secondary;\r\n        color: $color-onSecondary;\r\n        padding: 0.25rem 0.5rem;\r\n    }\r\n}\r\n\r\n.detailsContainer {\r\n    background-color: $color-surface;\r\n    color: $color-onSurface;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 12rem;\r\n    padding: 0.5rem 0.75rem;\r\n    height: 100%;\r\n}\r\n","/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\n.primary {\n  font-size: 1rem;\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  text-decoration: none;\n  border: 0;\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n  height: 2.25rem;\n  width: 100%;\n  min-width: 4rem;\n  transition: all 150ms;\n  line-height: 1.4em;\n  box-shadow: var(--shadows-button);\n  background-color: var(--color-primary);\n  color: var(--color-onPrimary); }\n  .primary:hover {\n    background-color: var(--color-primaryLight); }\n  .primary:active {\n    background-color: var(--color-primaryDark); }\n\n.ddefault {\n  font-size: 1rem;\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  text-decoration: none;\n  border: 0;\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n  height: 2.25rem;\n  width: 100%;\n  min-width: 4rem;\n  transition: all 150ms;\n  line-height: 1.4em;\n  box-shadow: var(--shadows-button);\n  background-color: var(--color-secondary);\n  color: var(--color-onSecondary); }\n  .ddefault:hover {\n    background-color: var(--color-secondaryLight); }\n  .ddefault:active {\n    background-color: var(--color-secondaryDark); }\n\n.sinkableUnsunk {\n  background-color: rgba(0, 0, 0, 0);\n  padding: 12px 16px;\n  border: 0;\n  border-bottom: 2px solid transparent;\n  transition: background-color 0.15s; }\n  .sinkableUnsunk:hover {\n    background-color: rgba(0, 0, 0, 0.15); }\n\n.sinkableSunk {\n  background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.2));\n  padding: 12px 16px;\n  border: 0;\n  border-bottom: 2px solid rgba(255, 255, 255, 0.5); }\n","@import \"../theme.scss\";\r\n\r\n@mixin common {\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    text-decoration: none;\r\n    border: 0;\r\n    border-radius: 0.25rem;\r\n    padding: 0.5rem;\r\n    height: 2.25rem;\r\n    width: 100%;\r\n    min-width: 4rem;\r\n    transition: all 150ms;\r\n    line-height: 1.4em;\r\n    box-shadow: $shadows-button;\r\n}\r\n\r\n.primary {\r\n    @include common;\r\n    background-color: $color-primary;\r\n    color: $color-onPrimary;\r\n\r\n    &:hover {\r\n        background-color: $color-primaryLight;\r\n    }\r\n\r\n    &:active {\r\n        background-color: $color-primaryDark;\r\n    }\r\n}\r\n\r\n.ddefault {\r\n    @include common;\r\n    background-color: $color-secondary;\r\n    color: $color-onSecondary;\r\n\r\n    &:hover {\r\n        background-color: $color-secondaryLight;\r\n    }\r\n\r\n    &:active {\r\n        background-color: $color-secondaryDark;\r\n    }\r\n}\r\n\r\n.sinkableUnsunk {\r\n    background-color: rgba(0, 0, 0, 0);\r\n    padding: 12px 16px;\r\n    border: 0;\r\n    border-bottom: 2px solid transparent;\r\n    transition: background-color 0.15s;\r\n\r\n    &:hover {\r\n        background-color: rgba(0, 0, 0, 0.15);\r\n    }\r\n}\r\n\r\n.sinkableSunk {\r\n    background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.2));\r\n    padding: 12px 16px;\r\n    border: 0;\r\n    border-bottom: 2px solid rgba(255, 255, 255, 0.5);\r\n}\r\n",".container {\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 1rem;\r\n}\r\n\r\n.secondary {\r\n    width: 25%;\r\n    height: 1rem;\r\n    margin-right: 5%;\r\n    border-top-left-radius: 0.75rem;\r\n    border-bottom-left-radius: 0.75rem;\r\n    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n        0 3px 1px -2px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.primary {\r\n    width: 70%;\r\n    height: 1rem;\r\n    border-top-right-radius: 0.75rem;\r\n    border-bottom-right-radius: 0.75rem;\r\n    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n        0 3px 1px -2px rgba(0, 0, 0, 0.12);\r\n}\r\n",".container {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n}\r\n\r\n.cicleThumb {\r\n    z-index: 100;\r\n    position: absolute;\r\n    width: 1rem;\r\n    height: 0.5rem;\r\n    margin-left: calc(-0.5rem - 0.05rem);\r\n    margin-top: calc(-0.25rem - 0.05rem);\r\n    border-width: 0.1rem;\r\n    border-style: solid;\r\n}\r\n\r\n.areaThumb {\r\n    z-index: 100;\r\n    position: absolute;\r\n    width: 0.75rem;\r\n    height: 0.75rem;\r\n    margin-left: calc(-0.375rem - 0.05rem);\r\n    margin-top: calc(-0.375rem - 0.05rem);\r\n    border-width: 0.1rem;\r\n    border-style: solid;\r\n    border-radius: 0.375rem;\r\n}\r\n","/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\n.icon {\n  fill: var(--color-onSurface); }\n","@import \"../theme.scss\";\r\n\r\n.icon {\r\n    fill: $color-onSurface;\r\n}\r\n",".container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: inherit;\r\n    margin: 0.25rem 0;\r\n    width: 100%;\r\n}\r\n\r\n.label {\r\n    color: inherit;\r\n    font-size: 0.875rem;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    pointer-events: none;\r\n    user-select: none;\r\n}\r\n",".container {\r\n    color: inherit;\r\n    margin: 0.5rem 0;\r\n    width: 100%;\r\n}\r\n\r\n.label {\r\n    color: inherit;\r\n    margin-bottom: 0.25rem;\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.content {\r\n    width: 100%;\r\n}\r\n\r\n.textContainer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    color: inherit;\r\n    user-select: none;\r\n}\r\n","/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\n.container {\n  background-color: var(--color-surface);\n  color: var(--color-onSurface);\n  min-width: 6rem; }\n\n.selectedDisplay {\n  cursor: pointer;\n  text-align: center;\n  min-width: 100%;\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.25rem; }\n  .selectedDisplay:hover {\n    background-color: var(--color-secondary);\n    color: var(--color-onSecondary); }\n\n.selectedDisplayExpanded {\n  cursor: pointer;\n  text-align: center;\n  min-width: 100%;\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.25rem;\n  background-color: var(--color-secondary);\n  color: var(--color-onSecondary); }\n\n.selectableOptions {\n  position: absolute;\n  flex-direction: column;\n  min-width: 6rem;\n  margin-top: 1px;\n  background-color: var(--color-surface);\n  color: var(--color-onSurface);\n  box-shadow: var(--shadows-menu); }\n  .selectableOptions > :first-child {\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem; }\n  .selectableOptions > :last-child {\n    border-bottom-left-radius: 0.25rem;\n    border-bottom-right-radius: 0.25rem; }\n\n.optionDefault {\n  cursor: pointer;\n  padding: 0.25rem 0.5rem; }\n  .optionDefault:hover {\n    background-color: var(--color-secondaryLight); }\n\n.optionSelected {\n  cursor: pointer;\n  padding: 0.25rem 0.5rem;\n  background-color: var(--color-secondary);\n  color: var(--color-onSecondary); }\n","@import \"../theme.scss\";\r\n\r\n.container {\r\n    background-color: $color-surface;\r\n    color: $color-onSurface;\r\n    min-width: 6rem;\r\n}\r\n\r\n@mixin selectedDisplayCommon {\r\n    cursor: pointer;\r\n    text-align: center;\r\n    min-width: 100%;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 0.25rem;\r\n}\r\n\r\n.selectedDisplay {\r\n    @include selectedDisplayCommon;\r\n    &:hover {\r\n        background-color: $color-secondary;\r\n        color: $color-onSecondary;\r\n    }\r\n}\r\n\r\n.selectedDisplayExpanded {\r\n    @include selectedDisplayCommon;\r\n    background-color: $color-secondary;\r\n    color: $color-onSecondary;\r\n}\r\n\r\n.selectableOptions {\r\n    position: absolute;\r\n    flex-direction: column;\r\n    min-width: 6rem;\r\n    margin-top: 1px;\r\n    background-color: $color-surface;\r\n    color: $color-onSurface;\r\n    box-shadow: $shadows-menu;\r\n\r\n    > :first-child {\r\n        border-top-left-radius: 0.25rem;\r\n        border-top-right-radius: 0.25rem;\r\n    }\r\n    > :last-child {\r\n        border-bottom-left-radius: 0.25rem;\r\n        border-bottom-right-radius: 0.25rem;\r\n    }\r\n}\r\n\r\n@mixin optionCommon {\r\n    cursor: pointer;\r\n    padding: 0.25rem 0.5rem;\r\n}\r\n\r\n.optionDefault {\r\n    @include optionCommon;\r\n    &:hover {\r\n        background-color: $color-secondaryLight;\r\n    }\r\n}\r\n\r\n.optionSelected {\r\n    @include optionCommon;\r\n    background-color: $color-secondary;\r\n    color: $color-onSecondary;\r\n}\r\n",".row {\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: inherit;\r\n    height: inherit;\r\n}\r\n\r\n.column {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: inherit;\r\n    height: inherit;\r\n}\r\n","/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\n.container {\n  cursor: pointer;\n  margin: 0.25rem 0;\n  padding: 0.25rem 0;\n  width: 100%;\n  position: relative; }\n\n.baseLine {\n  cursor: pointer;\n  position: absolute;\n  width: 100%;\n  right: 0;\n  height: 2px;\n  top: 50%;\n  transform: translate(0, -50%);\n  background-color: var(--color-secondaryLight);\n  z-index: 0; }\n\n.filledLineClass {\n  cursor: pointer;\n  position: absolute;\n  height: 2px;\n  top: 50%;\n  transform: translate(0, -50%);\n  background-color: var(--color-primary);\n  z-index: 1; }\n\n.emptyButton {\n  cursor: pointer;\n  position: absolute;\n  border-radius: 50%;\n  width: 0.75rem;\n  height: 0.75rem;\n  transform: translate(0, -50%);\n  z-index: 2;\n  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12);\n  background-color: var(--color-secondaryLight); }\n\n.button {\n  cursor: pointer;\n  position: absolute;\n  border-radius: 50%;\n  width: 0.75rem;\n  height: 0.75rem;\n  transform: translate(0, -50%);\n  z-index: 2;\n  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12);\n  background-color: var(--color-primary); }\n","@import \"../theme.scss\";\r\n\r\n.container {\r\n    cursor: pointer;\r\n    margin: 0.25rem 0;\r\n    padding: 0.25rem 0;\r\n    width: 100%;\r\n    position: relative;\r\n}\r\n\r\n.baseLine {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    width: 100%;\r\n    right: 0;\r\n    height: 2px;\r\n    top: 50%;\r\n    transform: translate(0, -50%);\r\n    background-color: $color-secondaryLight;\r\n    z-index: 0;\r\n}\r\n\r\n.filledLineClass {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    height: 2px;\r\n    top: 50%;\r\n    transform: translate(0, -50%);\r\n    background-color: $color-primary;\r\n    z-index: 1;\r\n}\r\n\r\n@mixin buttonBase {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    width: 0.75rem;\r\n    height: 0.75rem;\r\n    transform: translate(0, -50%);\r\n    z-index: 2;\r\n    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n        0 3px 1px -2px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.emptyButton {\r\n    @include buttonBase;\r\n    background-color: $color-secondaryLight;\r\n}\r\n\r\n.button {\r\n    @include buttonBase;\r\n    background-color: $color-primary;\r\n}\r\n","/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\n.surfaceLook {\n  background-color: var(--color-surface);\n  color: var(--color-onSurface);\n  box-shadow: var(--shadows-surface);\n  pointer-events: all; }\n\n.surface {\n  background-color: var(--color-surface);\n  color: var(--color-onSurface);\n  box-shadow: var(--shadows-surface);\n  pointer-events: all;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n  user-select: none; }\n","@import \"../theme.scss\";\r\n\r\n@mixin surfaceLook {\r\n    background-color: $color-surface;\r\n    color: $color-onSurface;\r\n    box-shadow: $shadows-surface;\r\n    pointer-events: all;\r\n}\r\n\r\n.surfaceLook {\r\n    @include surfaceLook;\r\n}\r\n\r\n.surface {\r\n    @include surfaceLook;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    user-select: none;\r\n}\r\n","/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\n.xswitch {\n  cursor: pointer;\n  display: inline-flex;\n  margin: 0.5rem 0; }\n\n.switchButtonContainer {\n  display: inline-flex;\n  position: absolute;\n  z-index: 2;\n  transition: 150ms transform; }\n\n.switchButton {\n  cursor: pointer;\n  width: 1rem;\n  height: 1rem;\n  border-radius: 0.5rem;\n  z-index: 2;\n  transition: 150ms background-color, 150ms transform;\n  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12); }\n\n.bgColorPrimary {\n  background-color: var(--color-primary); }\n\n.bgColorSecondary {\n  background-color: var(--color-secondary); }\n\n.switchBar {\n  background-color: var(--color-secondaryLight);\n  display: block;\n  width: 1.75rem;\n  height: 0.75rem;\n  border-radius: 0.3775rem;\n  z-index: 1;\n  transition: 150ms background-color, 150ms opacity; }\n","@import \"../theme.scss\";\r\n\r\n.xswitch {\r\n    cursor: pointer;\r\n    display: inline-flex;\r\n    margin: 0.5rem 0;\r\n}\r\n\r\n.switchButtonContainer {\r\n    display: inline-flex;\r\n    position: absolute;\r\n    z-index: 2;\r\n    transition: 150ms transform;\r\n}\r\n\r\n.switchButton {\r\n    cursor: pointer;\r\n    width: 1rem;\r\n    height: 1rem;\r\n    border-radius: 0.5rem;\r\n    z-index: 2;\r\n    transition: 150ms background-color, 150ms transform;\r\n    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n        0 3px 1px -2px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.bgColorPrimary {\r\n    background-color: $color-primary;\r\n}\r\n\r\n.bgColorSecondary {\r\n    background-color: $color-secondary;\r\n}\r\n\r\n.switchBar {\r\n    background-color: $color-secondaryLight;\r\n    display: block;\r\n    width: 1.75rem;\r\n    height: 0.75rem;\r\n    border-radius: 0.3775rem;\r\n    z-index: 1;\r\n    transition: 150ms background-color, 150ms opacity;\r\n}\r\n","/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\n.detailsContainer {\n  background-color: var(--color-surface);\n  color: var(--color-onSurface);\n  display: flex;\n  flex-direction: column;\n  width: 12rem;\n  padding: 0.5rem 0.75rem;\n  height: 100%; }\n","@import \"./theme.scss\";\r\n\r\n.detailsContainer {\r\n    background-color: $color-surface;\r\n    color: $color-onSurface;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 12rem;\r\n    padding: 0.5rem 0.75rem;\r\n    height: 100%;\r\n}\r\n",".toolBarContainer {\r\n    display: flex;\r\n}\r\n\r\n.leftBar {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-top: 1rem;\r\n    margin-right: 0.5rem;\r\n\r\n    > :not(:last-child) {\r\n        margin-bottom: 0.125rem;\r\n    }\r\n    > :not(:last-child) {\r\n        margin-bottom: 0.125rem;\r\n    }\r\n}\r\n","/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\n.layersWrapper {\n  height: 100%; }\n\n.layersListWrapper {\n  padding: 0.5rem 0.25rem; }\n  .layersListWrapper > :not(:first-child) {\n    margin-top: 0.25rem; }\n\n.layersControlsWrapper {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  padding-top: 0.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  width: 100%; }\n\n.unselectedLayerWrapper {\n  cursor: pointer;\n  border: 1px solid transparent; }\n  .unselectedLayerWrapper:hover {\n    border: 1px solid var(--color-secondaryDark); }\n\n.selectedLayerWrapper {\n  border: 1px solid var(--color-secondary); }\n\n.layerLeft {\n  height: 3rem;\n  width: 3rem;\n  margin-right: 0.5rem;\n  background-color: #789; }\n\n.layerRight {\n  display: flex;\n  flex-direction: column;\n  margin-right: 0.5rem; }\n\n.layerName {\n  font-size: 1rem; }\n\n.layerOpacity {\n  font-size: 0.75rem; }\n","@import \"./theme.scss\";\r\n\r\n.layersWrapper {\r\n    height: 100%;\r\n}\r\n\r\n.layersListWrapper {\r\n    padding: 0.5rem 0.25rem;\r\n\r\n    & > :not(:first-child) {\r\n        margin-top: 0.25rem;\r\n    }\r\n}\r\n\r\n.layersControlsWrapper {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    padding-top: 0.5rem;\r\n    padding-left: 0.5rem;\r\n    padding-right: 0.5rem;\r\n    width: 100%;\r\n}\r\n\r\n.unselectedLayerWrapper {\r\n    cursor: pointer;\r\n    border: 1px solid transparent;\r\n\r\n    &:hover {\r\n        border: 1px solid $color-secondaryDark;\r\n    }\r\n}\r\n\r\n.selectedLayerWrapper {\r\n    border: 1px solid $color-secondary;\r\n}\r\n\r\n.layerLeft {\r\n    height: 3rem;\r\n    width: 3rem;\r\n    margin-right: 0.5rem;\r\n    background-color: #789;\r\n}\r\n\r\n.layerRight {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-right: 0.5rem;\r\n}\r\n\r\n.layerName {\r\n    font-size: 1rem;\r\n}\r\n\r\n.layerOpacity {\r\n    font-size: 0.75rem;\r\n}\r\n","/*\r\n * css variables don't get typechecked, and it's very hard to refactor them, so we prefer\r\n * to use these scss variables that refer to the css variables, since the scss has to be compiled,\r\n * and the compilation will fail when scss-variables are undefined.\r\n */\n.container {\n  z-index: 100;\n  display: flex;\n  padding: 0.5rem 1rem; }\n\n.contentContainer {\n  padding-left: 1rem; }\n\n.monospaced {\n  font-family: var(--fonts-monospace); }\n\n.codeInput {\n  font-family: \"Courier New\", Courier, monospace;\n  background-color: var(--color-primary);\n  color: var(--color-onPrimary);\n  border-radius: 0.25rem;\n  padding: 0.25rem; }\n","@import \"./theme.scss\";\r\n\r\n.container {\r\n    z-index: 100;\r\n    display: flex;\r\n    padding: 0.5rem 1rem;\r\n}\r\n\r\n.contentContainer {\r\n    padding-left: 1rem;\r\n}\r\n\r\n.monospaced {\r\n    font-family: $fonts-monospace;\r\n}\r\n\r\n.codeInput {\r\n    font-family: \"Courier New\", Courier, monospace;\r\n    background-color: $color-primary;\r\n    color: $color-onPrimary;\r\n    border-radius: 0.25rem;\r\n    padding: 0.25rem;\r\n}\r\n",".container {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n}\r\n"],"sourceRoot":""}